set -ex
apt-get -q -y install skopeo jq jp
mkdir -p $HOME/.docker/cli-plugins
BUILDX_RELESES="https://github.com/docker/buildx/releases"
BUILDX_VERSION=$(curl -fsL $BUILDX_RELESES | grep -m 1 -Eo 'v[0-9]+\.[0-9]+\.[0-9]*')
curl -fsSL $BUILDX_RELESES/download/$BUILDX_VERSION/buildx-$BUILDX_VERSION.linux-amd64 \
  -o $HOME/.docker/cli-plugins/docker-buildx
chmod +x $HOME/.docker/cli-plugins/docker-buildx
docker info
docker run -d --rm --name registry -p 5000:5000 registry:2
BUILDKIT_RELESES="https://github.com/moby/buildkit/releases"
BUILDKIT_VERSION=$(curl -fsL $BUILDKIT_RELESES | grep -m 1 -Eo 'v[0-9]+\.[0-9]+\.[0-9]*')
docker buildx create --name img-builder --use --driver docker-container \
  --driver-opt image=moby/buildkit:$BUILDKIT_VERSION --driver-opt network=host
cat <<'EOF'> Dockerfile
FROM nginx:stable
RUN nginx -v
HEALTHCHECK --start-period=1s --timeout=10s --interval=10s \
  CMD curl -fsSL -H 'User-Agent: HealthCheck' http://127.0.0.1:80
EOF
docker buildx build --platform=linux/arm64/v8,linux/amd64 --pull \
  --push -t 127.0.0.1:5000/my-docker-image:v1 --progress=plain .
skopeo inspect --tls-verify=false --raw \
  docker://127.0.0.1:5000/my-docker-image:v1 | jq .
docker buildx build --platform=linux/arm64/v8,linux/amd64 --pull \
  -o type=oci,dest=- --progress=plain . > my-oci-image.tar
skopeo inspect --raw oci-archive:my-oci-image.tar | jq .
skopeo copy oci-archive:my-oci-image.tar \
  docker-archive:my-docker-image-amd64.tar \
  --override-arch=amd64
skopeo copy oci-archive:my-oci-image.tar \
  docker-archive:my-docker-image-arm64.tar \
  --override-arch=arm64
trivy image --no-progress --exit-code 0 --ignore-unfixed --severity HIGH,CRITICAL \
  --security-checks vuln --vuln-type os \
  -i my-docker-image-amd64.tar
trivy image --no-progress --exit-code 0 --ignore-unfixed --severity HIGH,CRITICAL \
  --security-checks vuln --vuln-type os \
  -i my-docker-image-arm64.tar
